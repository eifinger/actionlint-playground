---
"on":
  workflow_dispatch:

jobs:
  call-other-workflow:
    strategy:
      matrix:
        target: [dev, stage, prod]
    uses: ./.github/workflows/reusable-workflow-with-output.yml
    with:
      name: ${{ matrix.target }}
  follow-up:
    runs-on: ubuntu-latest
    needs: call-other-workflow
    steps:
      - run: |
          echo "Needs: ${{ toJSON(needs) }}"
          echo "Needs.call-other-workflow.outputs: ${{ toJSON(needs.call-other-workflow.outputs) }}"
          echo "The result was ${{ needs.call-other-workflow.outputs.name }}"

  first-dependency:
    uses: ./.github/workflows/reusable-workflow-with-output.yml
    with:
      name: "first"
  second-dependency:
    uses: ./.github/workflows/reusable-workflow-with-output.yml
    with:
      name: "second"
  third-dependency:
    uses: ./.github/workflows/reusable-workflow-with-output.yml
    with:
      name: "third"
  collector:
    runs-on: ubuntu-latest
    needs: [first-dependency, second-dependency, third-dependency]
    steps:
      - name: Plain
        continue-on-error: true
        run: |
          echo "Names: ${{ needs.*.outputs.name }}"
      - name: toJSON
        continue-on-error: true
        run: |
          echo "Names toJSON: ${{ toJSON(needs.*.outputs.name) }}"
      - name: fromJSON
        continue-on-error: true
        run: |
          echo "Names fromJSON: ${{ fromJSON(needs.*.outputs.name) }}"
      - name: Joined
        continue-on-error: true
        run: |
          echo "Joined: ${{ join(needs.*.outputs.name, ',') }}"